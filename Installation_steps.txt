# Set the name of the user who will be running spads et al

export SPADSUSERNAME="debian"
export ENGINEGITHUBPATH="https://github.com/beyond-all-reason/spring/releases/download/spring_bar_%7BBAR105%7D105.1.1-1544-g058c8ea/spring_bar_.BAR105.105.1.1-1544-g058c8ea_linux-64-minimal-portable.7z"
export ENGINEDIR="spring_bar_.BAR105.105.1.1-1544-g058c8ea_linux-64-minimal-portable"
adduser debian
usermod -aG sudo debian
apt-get install sudo 

# - init 1 minutes
sudo apt-get -y install htop byobu mc p7zip g++ swig locate git python3-dev cpanminus p7zip-full python3-distutils make sshpass libffi-platypus-perl libdbd-sqlite3-perl python3-paho-mqtt curl

#- Make the swap file: 1 minute
cd /var
sudo touch swap.img
sudo chmod 600 swap.img
sudo dd if=/dev/zero of=/var/swap.img bs=1024k count=4000
sudo mkswap /var/swap.img
sudo swapon /var/swap.img
sudo su -c "echo '/var/swap.img swap swap defaults 0 0' >> /etc/fstab"
sudo sysctl vm.swappiness=10
sudo su -c "echo 'vm.swappiness=10' >> /etc/sysctl.conf"

#- clone the updater 1 min
mkdir -p ~/spads/var/spring
mkdir -p ~/spads/var/plugins
mkdir -p ~/spads/etc
cd ~/spads
git clone https://github.com/beyond-all-reason/spads_config_bar.git
cd spads_config_bar/
python3 spads_config_bar_updater.py -s

# GRAB DESIRED ENGINE
python3 spads_config_bar_updater.py -u $ENGINEGITHUBPATH

# install SPADS
# HAVE PATH TO ENGINE READY ON CLIPBOARD
cd ~
sudo cpanm https://github.com/niner/inline-python-pm.git
mkdir spads
cd spads
wget http://planetspads.free.fr/spads/installer/spadsInstaller.tar
tar -xvf spadsInstaller.tar
./spadsInstaller.pl
# install spads with _all_ default settings
# official fails for some reason, it cant find spring install, you gotta manually do it, so run python3 spads_config_bar_updater.py -s -u [latest github release]
# and then relaunch

# Install map syncing script
sudo su -c "curl -L https://raw.githubusercontent.com/beyond-all-reason/maps-metadata/main/tools/map_syncer/map_syncer.py > /usr/local/bin/map_syncer.py && chmod +x /usr/local/bin/map_syncer.py"
cp ~/spads/spads_config_bar/map_syncer.service /etc/systemd/system
# Update the INSTANCE_NAME and MAPS_DIR to correct values
nano /etc/systemd/system/map_syncer.service
# Enable service and it will download maps
sudo systemctl daemon-reload
sudo systemctl enable map_syncer
sudo systemctl start map_syncer
# check service status
sudo systemctl status map_syncer

# edit cluster launcher template
cp ~/spads/spads_config_bar/etc/spads_cluster_launcher.sh.template ~/spads/etc/spads_cluster_launcher.sh
chmod +x ~/spads/etc/spads_cluster_launcher.sh
nano ~/spads/etc/spads_cluster_launcher.sh

#get latest engine
python3 spads_config_bar_updater.py -c -u $ENGINEGITHUBPATH

#copy pr-dler to ~/spads
cp ~/spads/var/spring/$ENGINEDIR/pr-downloader ~/spads/
/home/$SPADSUSERNAME/spads/pr-downloader --filesystem-writepath /home/$SPADSUSERNAME/spads/var/spring/data byar:test

# Systemd services and timers:
cd ~/spads/spads_config_bar/
python3 spads_config_bar_updater.py -s
sudo cp *.service ~/spads
sudo cp *.timer ~/spads
cd ~/spads
for systemdfile in pr-downloader.service pr-downloader.timer spads_config_updater.service spads_config_updater.timer; do sudo sed -i "s/ubuntu/$SPADSUSERNAME/g" $systemdfile; done

# copy them into services
sudo cp *.service /etc/systemd/system
sudo cp *.timer /etc/systemd/system

# enable services
sudo systemctl daemon-reload
sudo systemctl start pr-downloader.service
sudo systemctl start spads_config_updater.service
sudo systemctl daemon-reload
sudo systemctl enable --now pr-downloader.timer
sudo systemctl enable --now spads_config_updater.timer
sudo systemctl daemon-reload

#replay upload:
#add these to the users .bashrc as env vars
sudo nano ~/.bashrc
#copy these:
#export SFTP_PASSWORD="@CHANGEME"
#export SFTP_LOGIN="beherith"

# UPDATE SpringLobbyInterface
cd ~/spads/
ln -sf SpringLobbyInterface_0.42a.pm SpringLobbyInterface.pm


# start it, like 15 minutes first start :/ 
byobu
cd ~/spads/etc/
./spads_cluster_launcher.sh

# further things/ todo:
# - set up glances, start it from crontab as glances -w for quick view on port 61208
# - set up replay-deleter, which every week, should delete replays older than 1 month
# - set up log-rotator, which every week, should zip up logs, and delete the old ones (maybe use logrotate?)

